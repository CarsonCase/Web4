{
  "address": "0x75D1E4838051a0e84F3D5a5cA2f7Ca96B5D3eF01",
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "smartContract",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "in_token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "in_am",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "out_token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "min_out_am",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "internalType": "struct TX_Object",
          "name": "",
          "type": "tuple"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "ExecutionError",
      "type": "error"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "smartContract",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "in_token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "in_am",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "out_token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "min_out_am",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "internalType": "struct TX_Object[]",
          "name": "toExecute",
          "type": "tuple[]"
        }
      ],
      "name": "executeTransactions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x5be1a9c5019711b34feff43592787c41ed4e5b511d88b55a97197d4a880dca10",
  "receipt": {
    "to": null,
    "from": "0xAEB478F060B582d3E8d752bcb3430B59FAe4cAF3",
    "contractAddress": "0x75D1E4838051a0e84F3D5a5cA2f7Ca96B5D3eF01",
    "transactionIndex": 0,
    "gasUsed": "736094",
    "logsBloom": "0x
    "blockHash": "0x2fb7132cc59517d1a71ecfda49f793826dfabc9166d7f1fee489602634e40773",
    "transactionHash": "0x5be1a9c5019711b34feff43592787c41ed4e5b511d88b55a97197d4a880dca10",
    "logs": [],
    "blockNumber": 17237196,
    "cumulativeGasUsed": "736094",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "4d840282564e9e71df41811195e58419",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"smartContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"in_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"in_am\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"out_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"min_out_am\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct TX_Object\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"ExecutionError\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"smartContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"in_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"in_am\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"out_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"min_out_am\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct TX_Object[]\",\"name\":\"toExecute\",\"type\":\"tuple[]\"}],\"name\":\"executeTransactions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/Router.sol\":\"Router\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"contracts/core/IPlugin.sol\":{\"content\":\"//SPDX-License-Identifier: None\\npragma solidity ^0.8.19;\\n\\ninterface IPlugin {\\n    function executeTransaction(address, uint, address, uint, address, bytes memory) external;\\n}\\n\",\"keccak256\":\"0x936e672f1541114ecf9c709763c29bc7f3f96e4ececaf2b4dc0b56de24f92924\",\"license\":\"None\"},\"contracts/core/Router.sol\":{\"content\":\"//SPDX-License-Identifier: None\\npragma solidity ^0.8.19;\\n\\nimport {IPlugin} from \\\"./IPlugin.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\nstruct TX_Object{\\n    address smartContract;\\n    address in_token;\\n    uint in_am;\\n    address out_token;\\n    uint min_out_am;\\n    address receiver;\\n    bytes data;\\n}\\n\\ncontract Router {\\n\\n    error ExecutionError(TX_Object, string);\\n\\n    function executeTransactions(TX_Object[] calldata toExecute) external{\\n        require(toExecute.length != 0, \\\"Cannot call with an empty array\\\");\\n        for(uint i; i < toExecute.length; i++){\\n\\n            TX_Object memory _tx = toExecute[i];\\n            uint balBefore = IERC20(_tx.out_token).balanceOf(_tx.receiver);\\n            if(_tx.in_am > 0){\\n                IERC20(_tx.in_token).transferFrom(msg.sender, _tx.smartContract, _tx.in_am);\\n            }\\n            IPlugin(_tx.smartContract).executeTransaction(_tx.in_token, _tx.in_am, _tx.out_token, _tx.min_out_am, _tx.receiver, _tx.data);\\n            uint balAfter = IERC20(_tx.out_token).balanceOf(_tx.receiver);\\n\\n            if(balAfter - balBefore < _tx.min_out_am){\\n                revert ExecutionError(_tx, \\\"Implementation failed to return a sufficient amount\\\");\\n            }\\n        }\\n    }\\n\\n}\\n\",\"keccak256\":\"0x86653904298f8642576f10a73f7a29bd8be7e2e06ae3660e205944cd91153ef6\",\"license\":\"None\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610c64806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063e3d378aa14610030575b600080fd5b61004a600480360381019061004591906103f2565b61004c565b005b60008282905003610092576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100899061049c565b60405180910390fd5b60005b828290508110156103745760008383838181106100b5576100b46104bc565b5b90506020028101906100c791906104f0565b6100d0906107c7565b90506000816060015173ffffffffffffffffffffffffffffffffffffffff166370a082318360a001516040518263ffffffff1660e01b815260040161011591906107e9565b602060405180830381865afa158015610132573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101569190610819565b90506000826040015111156101f357816020015173ffffffffffffffffffffffffffffffffffffffff166323b872dd33846000015185604001516040518463ffffffff1660e01b81526004016101ae93929190610855565b6020604051808303816000875af11580156101cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f191906108c4565b505b816000015173ffffffffffffffffffffffffffffffffffffffff1663e20418ef83602001518460400151856060015186608001518760a001518860c001516040518763ffffffff1660e01b815260040161025296959493929190610970565b600060405180830381600087803b15801561026c57600080fd5b505af1158015610280573d6000803e3d6000fd5b505050506000826060015173ffffffffffffffffffffffffffffffffffffffff166370a082318460a001516040518263ffffffff1660e01b81526004016102c791906107e9565b602060405180830381865afa1580156102e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103089190610819565b90508260800151828261031b9190610a07565b101561035e57826040517f82fee6180000000000000000000000000000000000000000000000000000000081526004016103559190610bb1565b60405180910390fd5b505050808061036c90610be6565b915050610095565b505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f8401126103b2576103b161038d565b5b8235905067ffffffffffffffff8111156103cf576103ce610392565b5b6020830191508360208202830111156103eb576103ea610397565b5b9250929050565b6000806020838503121561040957610408610383565b5b600083013567ffffffffffffffff81111561042757610426610388565b5b6104338582860161039c565b92509250509250929050565b600082825260208201905092915050565b7f43616e6e6f742063616c6c207769746820616e20656d70747920617272617900600082015250565b6000610486601f8361043f565b915061049182610450565b602082019050919050565b600060208201905081810360008301526104b581610479565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b60008235600160e00383360303811261050c5761050b6104eb565b5b80830191505092915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6105668261051d565b810181811067ffffffffffffffff821117156105855761058461052e565b5b80604052505050565b6000610598610379565b90506105a4828261055d565b919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105d9826105ae565b9050919050565b6105e9816105ce565b81146105f457600080fd5b50565b600081359050610606816105e0565b92915050565b6000819050919050565b61061f8161060c565b811461062a57600080fd5b50565b60008135905061063c81610616565b92915050565b600080fd5b600067ffffffffffffffff8211156106625761066161052e565b5b61066b8261051d565b9050602081019050919050565b82818337600083830152505050565b600061069a61069584610647565b61058e565b9050828152602081018484840111156106b6576106b5610642565b5b6106c1848285610678565b509392505050565b600082601f8301126106de576106dd61038d565b5b81356106ee848260208601610687565b91505092915050565b600060e0828403121561070d5761070c610518565b5b61071760e061058e565b90506000610727848285016105f7565b600083015250602061073b848285016105f7565b602083015250604061074f8482850161062d565b6040830152506060610763848285016105f7565b60608301525060806107778482850161062d565b60808301525060a061078b848285016105f7565b60a08301525060c082013567ffffffffffffffff8111156107af576107ae6105a9565b5b6107bb848285016106c9565b60c08301525092915050565b60006107d336836106f7565b9050919050565b6107e3816105ce565b82525050565b60006020820190506107fe60008301846107da565b92915050565b60008151905061081381610616565b92915050565b60006020828403121561082f5761082e610383565b5b600061083d84828501610804565b91505092915050565b61084f8161060c565b82525050565b600060608201905061086a60008301866107da565b61087760208301856107da565b6108846040830184610846565b949350505050565b60008115159050919050565b6108a18161088c565b81146108ac57600080fd5b50565b6000815190506108be81610898565b92915050565b6000602082840312156108da576108d9610383565b5b60006108e8848285016108af565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561092b578082015181840152602081019050610910565b60008484015250505050565b6000610942826108f1565b61094c81856108fc565b935061095c81856020860161090d565b6109658161051d565b840191505092915050565b600060c08201905061098560008301896107da565b6109926020830188610846565b61099f60408301876107da565b6109ac6060830186610846565b6109b960808301856107da565b81810360a08301526109cb8184610937565b9050979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a128261060c565b9150610a1d8361060c565b9250828203905081811115610a3557610a346109d8565b5b92915050565b610a44816105ce565b82525050565b610a538161060c565b82525050565b600082825260208201905092915050565b6000610a75826108f1565b610a7f8185610a59565b9350610a8f81856020860161090d565b610a988161051d565b840191505092915050565b600060e083016000830151610abb6000860182610a3b565b506020830151610ace6020860182610a3b565b506040830151610ae16040860182610a4a565b506060830151610af46060860182610a3b565b506080830151610b076080860182610a4a565b5060a0830151610b1a60a0860182610a3b565b5060c083015184820360c0860152610b328282610a6a565b9150508091505092915050565b7f496d706c656d656e746174696f6e206661696c656420746f2072657475726e2060008201527f612073756666696369656e7420616d6f756e7400000000000000000000000000602082015250565b6000610b9b60338361043f565b9150610ba682610b3f565b604082019050919050565b60006040820190508181036000830152610bcb8184610aa3565b90508181036020830152610bde81610b8e565b905092915050565b6000610bf18261060c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610c2357610c226109d8565b5b60018201905091905056fea26469706673582212203db1c20b9f45fa1434615a20c7defc56f463aea3b8256c43b90acb60d5810abd64736f6c63430008130033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063e3d378aa14610030575b600080fd5b61004a600480360381019061004591906103f2565b61004c565b005b60008282905003610092576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100899061049c565b60405180910390fd5b60005b828290508110156103745760008383838181106100b5576100b46104bc565b5b90506020028101906100c791906104f0565b6100d0906107c7565b90506000816060015173ffffffffffffffffffffffffffffffffffffffff166370a082318360a001516040518263ffffffff1660e01b815260040161011591906107e9565b602060405180830381865afa158015610132573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101569190610819565b90506000826040015111156101f357816020015173ffffffffffffffffffffffffffffffffffffffff166323b872dd33846000015185604001516040518463ffffffff1660e01b81526004016101ae93929190610855565b6020604051808303816000875af11580156101cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f191906108c4565b505b816000015173ffffffffffffffffffffffffffffffffffffffff1663e20418ef83602001518460400151856060015186608001518760a001518860c001516040518763ffffffff1660e01b815260040161025296959493929190610970565b600060405180830381600087803b15801561026c57600080fd5b505af1158015610280573d6000803e3d6000fd5b505050506000826060015173ffffffffffffffffffffffffffffffffffffffff166370a082318460a001516040518263ffffffff1660e01b81526004016102c791906107e9565b602060405180830381865afa1580156102e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103089190610819565b90508260800151828261031b9190610a07565b101561035e57826040517f82fee6180000000000000000000000000000000000000000000000000000000081526004016103559190610bb1565b60405180910390fd5b505050808061036c90610be6565b915050610095565b505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f8401126103b2576103b161038d565b5b8235905067ffffffffffffffff8111156103cf576103ce610392565b5b6020830191508360208202830111156103eb576103ea610397565b5b9250929050565b6000806020838503121561040957610408610383565b5b600083013567ffffffffffffffff81111561042757610426610388565b5b6104338582860161039c565b92509250509250929050565b600082825260208201905092915050565b7f43616e6e6f742063616c6c207769746820616e20656d70747920617272617900600082015250565b6000610486601f8361043f565b915061049182610450565b602082019050919050565b600060208201905081810360008301526104b581610479565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b60008235600160e00383360303811261050c5761050b6104eb565b5b80830191505092915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6105668261051d565b810181811067ffffffffffffffff821117156105855761058461052e565b5b80604052505050565b6000610598610379565b90506105a4828261055d565b919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105d9826105ae565b9050919050565b6105e9816105ce565b81146105f457600080fd5b50565b600081359050610606816105e0565b92915050565b6000819050919050565b61061f8161060c565b811461062a57600080fd5b50565b60008135905061063c81610616565b92915050565b600080fd5b600067ffffffffffffffff8211156106625761066161052e565b5b61066b8261051d565b9050602081019050919050565b82818337600083830152505050565b600061069a61069584610647565b61058e565b9050828152602081018484840111156106b6576106b5610642565b5b6106c1848285610678565b509392505050565b600082601f8301126106de576106dd61038d565b5b81356106ee848260208601610687565b91505092915050565b600060e0828403121561070d5761070c610518565b5b61071760e061058e565b90506000610727848285016105f7565b600083015250602061073b848285016105f7565b602083015250604061074f8482850161062d565b6040830152506060610763848285016105f7565b60608301525060806107778482850161062d565b60808301525060a061078b848285016105f7565b60a08301525060c082013567ffffffffffffffff8111156107af576107ae6105a9565b5b6107bb848285016106c9565b60c08301525092915050565b60006107d336836106f7565b9050919050565b6107e3816105ce565b82525050565b60006020820190506107fe60008301846107da565b92915050565b60008151905061081381610616565b92915050565b60006020828403121561082f5761082e610383565b5b600061083d84828501610804565b91505092915050565b61084f8161060c565b82525050565b600060608201905061086a60008301866107da565b61087760208301856107da565b6108846040830184610846565b949350505050565b60008115159050919050565b6108a18161088c565b81146108ac57600080fd5b50565b6000815190506108be81610898565b92915050565b6000602082840312156108da576108d9610383565b5b60006108e8848285016108af565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561092b578082015181840152602081019050610910565b60008484015250505050565b6000610942826108f1565b61094c81856108fc565b935061095c81856020860161090d565b6109658161051d565b840191505092915050565b600060c08201905061098560008301896107da565b6109926020830188610846565b61099f60408301876107da565b6109ac6060830186610846565b6109b960808301856107da565b81810360a08301526109cb8184610937565b9050979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a128261060c565b9150610a1d8361060c565b9250828203905081811115610a3557610a346109d8565b5b92915050565b610a44816105ce565b82525050565b610a538161060c565b82525050565b600082825260208201905092915050565b6000610a75826108f1565b610a7f8185610a59565b9350610a8f81856020860161090d565b610a988161051d565b840191505092915050565b600060e083016000830151610abb6000860182610a3b565b506020830151610ace6020860182610a3b565b506040830151610ae16040860182610a4a565b506060830151610af46060860182610a3b565b506080830151610b076080860182610a4a565b5060a0830151610b1a60a0860182610a3b565b5060c083015184820360c0860152610b328282610a6a565b9150508091505092915050565b7f496d706c656d656e746174696f6e206661696c656420746f2072657475726e2060008201527f612073756666696369656e7420616d6f756e7400000000000000000000000000602082015250565b6000610b9b60338361043f565b9150610ba682610b3f565b604082019050919050565b60006040820190508181036000830152610bcb8184610aa3565b90508181036020830152610bde81610b8e565b905092915050565b6000610bf18261060c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610c2357610c226109d8565b5b60018201905091905056fea26469706673582212203db1c20b9f45fa1434615a20c7defc56f463aea3b8256c43b90acb60d5810abd64736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}