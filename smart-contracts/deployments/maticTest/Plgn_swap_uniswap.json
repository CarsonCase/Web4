{
  "address": "0x31BcC8f696701d9aE715444efC728145E080d6c7",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ISwapRouter",
          "name": "_swapRouter",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "inToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "inAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "outToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "minOutAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "executeTransaction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolFee",
      "outputs": [
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapRouter",
      "outputs": [
        {
          "internalType": "contract ISwapRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xd929c7c48376e39dfd388b5f9161097e6952970274b6c842e8217bfde820d92a",
  "receipt": {
    "to": null,
    "from": "0xAEB478F060B582d3E8d752bcb3430B59FAe4cAF3",
    "contractAddress": "0x31BcC8f696701d9aE715444efC728145E080d6c7",
    "transactionIndex": 1,
    "gasUsed": "607121",
    "logsBloom": "0x
    "blockHash": "0x7cd60103959570f30f893a1124d8741a635e2798f931d5c862c4b64850e5ef46",
    "transactionHash": "0xd929c7c48376e39dfd388b5f9161097e6952970274b6c842e8217bfde820d92a",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 34367254,
        "transactionHash": "0xd929c7c48376e39dfd388b5f9161097e6952970274b6c842e8217bfde820d92a",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000aeb478f060b582d3e8d752bcb3430b59fae4caf3",
          "0x000000000000000000000000c26880a0af2ea0c7e8130e6ec47af756465452e8"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000052d374bce62b300000000000000000000000000000000000000000000000002c19e36fc7b46ba000000000000000000000000000000000000000000001db718f9db454d6a155400000000000000000000000000000000000000000000000002bc70ffb0ace407000000000000000000000000000000000000000000001db718ff087c99387807",
        "logIndex": 2,
        "blockHash": "0x7cd60103959570f30f893a1124d8741a635e2798f931d5c862c4b64850e5ef46"
      }
    ],
    "blockNumber": 34367254,
    "cumulativeGasUsed": "682958",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xE592427A0AEce92De3Edee1F18E0157C05861564"
  ],
  "numDeployments": 1,
  "solcInputHash": "16c9b968fcd0b04d354d10e62ab1359a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"_swapRouter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"inToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"outToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minOutAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"executeTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolFee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/plgn_swap_uniswap.sol\":\"Plgn_swap_uniswap\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Callback for IUniswapV3PoolActions#swap\\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\\ninterface IUniswapV3SwapCallback {\\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\\n    function uniswapV3SwapCallback(\\n        int256 amount0Delta,\\n        int256 amount1Delta,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\npragma abicoder v2;\\n\\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\\n\\n/// @title Router token swapping functionality\\n/// @notice Functions for swapping tokens via Uniswap V3\\ninterface ISwapRouter is IUniswapV3SwapCallback {\\n    struct ExactInputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactInputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactOutputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\\n\\n    struct ExactOutputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\\n}\\n\",\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.6.0;\\n\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\n\\nlibrary TransferHelper {\\n    /// @notice Transfers tokens from the targeted address to the given destination\\n    /// @notice Errors with 'STF' if transfer fails\\n    /// @param token The contract address of the token to be transferred\\n    /// @param from The originating address from which the tokens will be transferred\\n    /// @param to The destination address of the transfer\\n    /// @param value The amount to be transferred\\n    function safeTransferFrom(\\n        address token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        (bool success, bytes memory data) =\\n            token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF');\\n    }\\n\\n    /// @notice Transfers tokens from msg.sender to a recipient\\n    /// @dev Errors with ST if transfer fails\\n    /// @param token The contract address of the token which will be transferred\\n    /// @param to The recipient of the transfer\\n    /// @param value The value of the transfer\\n    function safeTransfer(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'ST');\\n    }\\n\\n    /// @notice Approves the stipulated contract to spend the given allowance in the given token\\n    /// @dev Errors with 'SA' if transfer fails\\n    /// @param token The contract address of the token to be approved\\n    /// @param to The target of the approval\\n    /// @param value The amount of the given token the target will be allowed to spend\\n    function safeApprove(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA');\\n    }\\n\\n    /// @notice Transfers ETH to the recipient address\\n    /// @dev Fails with `STE`\\n    /// @param to The destination of the transfer\\n    /// @param value The value to be transferred\\n    function safeTransferETH(address to, uint256 value) internal {\\n        (bool success, ) = to.call{value: value}(new bytes(0));\\n        require(success, 'STE');\\n    }\\n}\\n\",\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\"},\"contracts/core/IPlugin.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.19;\\n\\ninterface IPlugin {\\n    function executeTransaction(address, uint, address, uint, address, bytes memory) external;\\n}\\n\",\"keccak256\":\"0x2c00d6a3771f6388aa779cf0813287c2e47bf9087a3f5561748972725a38648a\",\"license\":\"Unlicense\"},\"contracts/plgn_swap_uniswap.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.19;\\n\\nimport {IPlugin} from \\\"./core/IPlugin.sol\\\";\\nimport '@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol';\\nimport '@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol';\\n\\ncontract Plgn_swap_uniswap is IPlugin{\\n    ISwapRouter public immutable swapRouter;\\n\\n    uint24 public constant poolFee = 3000;\\n\\n    constructor(ISwapRouter _swapRouter) {\\n        swapRouter = _swapRouter;\\n    }\\n\\n    function executeTransaction(address inToken, uint inAmount, address outToken, uint minOutAmount, address receiver, bytes memory data) external{\\n        TransferHelper.safeApprove(inToken, address(swapRouter), inAmount);\\n\\n        ISwapRouter.ExactInputSingleParams memory params =\\n            ISwapRouter.ExactInputSingleParams({\\n                tokenIn: inToken,\\n                tokenOut: outToken,\\n                fee: poolFee,\\n                recipient: receiver,\\n                deadline: block.timestamp,\\n                amountIn: inAmount,\\n                amountOutMinimum: minOutAmount,\\n                sqrtPriceLimitX96: 0\\n            });\\n\\n        swapRouter.exactInputSingle(params);\\n    }\\n}\",\"keccak256\":\"0x4891b8a4bbddf6a02d3650359fb40d3eb109762324729440deab5a75fb460957\",\"license\":\"Unlicense\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610b2e380380610b2e833981810160405281019061003291906100e1565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505061010e565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061009c82610071565b9050919050565b60006100ae82610091565b9050919050565b6100be816100a3565b81146100c957600080fd5b50565b6000815190506100db816100b5565b92915050565b6000602082840312156100f7576100f661006c565b5b6000610105848285016100cc565b91505092915050565b6080516109f96101356000396000818160a60152818160ce015261019301526109f96000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063089fe6aa14610046578063c31c9c0714610064578063e20418ef14610082575b600080fd5b61004e61009e565b60405161005b91906103aa565b60405180910390f35b61006c6100a4565b6040516100799190610444565b60405180910390f35b61009c6004803603810190610097919061062d565b6100c8565b005b610bb881565b7f000000000000000000000000000000000000000000000000000000000000000081565b6100f3867f000000000000000000000000000000000000000000000000000000000000000087610237565b60006040518061010001604052808873ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff168152602001428152602001878152602001858152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663414bf389826040518263ffffffff1660e01b81526004016101ea91906107b4565b6020604051808303816000875af1158015610209573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022d91906107e5565b5050505050505050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b858560405160240161026c929190610830565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516102d691906108ca565b6000604051808303816000865af19150503d8060008114610313576040519150601f19603f3d011682016040523d82523d6000602084013e610318565b606091505b509150915081801561034657506000815114806103455750808060200190518101906103449190610919565b5b5b610385576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037c906109a3565b60405180910390fd5b5050505050565b600062ffffff82169050919050565b6103a48161038c565b82525050565b60006020820190506103bf600083018461039b565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061040a610405610400846103c5565b6103e5565b6103c5565b9050919050565b600061041c826103ef565b9050919050565b600061042e82610411565b9050919050565b61043e81610423565b82525050565b60006020820190506104596000830184610435565b92915050565b6000604051905090565b600080fd5b600080fd5b600061047e826103c5565b9050919050565b61048e81610473565b811461049957600080fd5b50565b6000813590506104ab81610485565b92915050565b6000819050919050565b6104c4816104b1565b81146104cf57600080fd5b50565b6000813590506104e1816104bb565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61053a826104f1565b810181811067ffffffffffffffff8211171561055957610558610502565b5b80604052505050565b600061056c61045f565b90506105788282610531565b919050565b600067ffffffffffffffff82111561059857610597610502565b5b6105a1826104f1565b9050602081019050919050565b82818337600083830152505050565b60006105d06105cb8461057d565b610562565b9050828152602081018484840111156105ec576105eb6104ec565b5b6105f78482856105ae565b509392505050565b600082601f830112610614576106136104e7565b5b81356106248482602086016105bd565b91505092915050565b60008060008060008060c0878903121561064a57610649610469565b5b600061065889828a0161049c565b965050602061066989828a016104d2565b955050604061067a89828a0161049c565b945050606061068b89828a016104d2565b935050608061069c89828a0161049c565b92505060a087013567ffffffffffffffff8111156106bd576106bc61046e565b5b6106c989828a016105ff565b9150509295509295509295565b6106df81610473565b82525050565b6106ee8161038c565b82525050565b6106fd816104b1565b82525050565b61070c816103c5565b82525050565b6101008201600082015161072960008501826106d6565b50602082015161073c60208501826106d6565b50604082015161074f60408501826106e5565b50606082015161076260608501826106d6565b50608082015161077560808501826106f4565b5060a082015161078860a08501826106f4565b5060c082015161079b60c08501826106f4565b5060e08201516107ae60e0850182610703565b50505050565b6000610100820190506107ca6000830184610712565b92915050565b6000815190506107df816104bb565b92915050565b6000602082840312156107fb576107fa610469565b5b6000610809848285016107d0565b91505092915050565b61081b81610473565b82525050565b61082a816104b1565b82525050565b60006040820190506108456000830185610812565b6108526020830184610821565b9392505050565b600081519050919050565b600081905092915050565b60005b8381101561088d578082015181840152602081019050610872565b60008484015250505050565b60006108a482610859565b6108ae8185610864565b93506108be81856020860161086f565b80840191505092915050565b60006108d68284610899565b915081905092915050565b60008115159050919050565b6108f6816108e1565b811461090157600080fd5b50565b600081519050610913816108ed565b92915050565b60006020828403121561092f5761092e610469565b5b600061093d84828501610904565b91505092915050565b600082825260208201905092915050565b7f5341000000000000000000000000000000000000000000000000000000000000600082015250565b600061098d600283610946565b915061099882610957565b602082019050919050565b600060208201905081810360008301526109bc81610980565b905091905056fea264697066735822122060cc85220c00478617f86bb5aa3009e53b96c7bba6b7203b3c138d610e319ce464736f6c63430008130033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c8063089fe6aa14610046578063c31c9c0714610064578063e20418ef14610082575b600080fd5b61004e61009e565b60405161005b91906103aa565b60405180910390f35b61006c6100a4565b6040516100799190610444565b60405180910390f35b61009c6004803603810190610097919061062d565b6100c8565b005b610bb881565b7f000000000000000000000000000000000000000000000000000000000000000081565b6100f3867f000000000000000000000000000000000000000000000000000000000000000087610237565b60006040518061010001604052808873ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff168152602001428152602001878152602001858152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663414bf389826040518263ffffffff1660e01b81526004016101ea91906107b4565b6020604051808303816000875af1158015610209573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022d91906107e5565b5050505050505050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b858560405160240161026c929190610830565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516102d691906108ca565b6000604051808303816000865af19150503d8060008114610313576040519150601f19603f3d011682016040523d82523d6000602084013e610318565b606091505b509150915081801561034657506000815114806103455750808060200190518101906103449190610919565b5b5b610385576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037c906109a3565b60405180910390fd5b5050505050565b600062ffffff82169050919050565b6103a48161038c565b82525050565b60006020820190506103bf600083018461039b565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061040a610405610400846103c5565b6103e5565b6103c5565b9050919050565b600061041c826103ef565b9050919050565b600061042e82610411565b9050919050565b61043e81610423565b82525050565b60006020820190506104596000830184610435565b92915050565b6000604051905090565b600080fd5b600080fd5b600061047e826103c5565b9050919050565b61048e81610473565b811461049957600080fd5b50565b6000813590506104ab81610485565b92915050565b6000819050919050565b6104c4816104b1565b81146104cf57600080fd5b50565b6000813590506104e1816104bb565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61053a826104f1565b810181811067ffffffffffffffff8211171561055957610558610502565b5b80604052505050565b600061056c61045f565b90506105788282610531565b919050565b600067ffffffffffffffff82111561059857610597610502565b5b6105a1826104f1565b9050602081019050919050565b82818337600083830152505050565b60006105d06105cb8461057d565b610562565b9050828152602081018484840111156105ec576105eb6104ec565b5b6105f78482856105ae565b509392505050565b600082601f830112610614576106136104e7565b5b81356106248482602086016105bd565b91505092915050565b60008060008060008060c0878903121561064a57610649610469565b5b600061065889828a0161049c565b965050602061066989828a016104d2565b955050604061067a89828a0161049c565b945050606061068b89828a016104d2565b935050608061069c89828a0161049c565b92505060a087013567ffffffffffffffff8111156106bd576106bc61046e565b5b6106c989828a016105ff565b9150509295509295509295565b6106df81610473565b82525050565b6106ee8161038c565b82525050565b6106fd816104b1565b82525050565b61070c816103c5565b82525050565b6101008201600082015161072960008501826106d6565b50602082015161073c60208501826106d6565b50604082015161074f60408501826106e5565b50606082015161076260608501826106d6565b50608082015161077560808501826106f4565b5060a082015161078860a08501826106f4565b5060c082015161079b60c08501826106f4565b5060e08201516107ae60e0850182610703565b50505050565b6000610100820190506107ca6000830184610712565b92915050565b6000815190506107df816104bb565b92915050565b6000602082840312156107fb576107fa610469565b5b6000610809848285016107d0565b91505092915050565b61081b81610473565b82525050565b61082a816104b1565b82525050565b60006040820190506108456000830185610812565b6108526020830184610821565b9392505050565b600081519050919050565b600081905092915050565b60005b8381101561088d578082015181840152602081019050610872565b60008484015250505050565b60006108a482610859565b6108ae8185610864565b93506108be81856020860161086f565b80840191505092915050565b60006108d68284610899565b915081905092915050565b60008115159050919050565b6108f6816108e1565b811461090157600080fd5b50565b600081519050610913816108ed565b92915050565b60006020828403121561092f5761092e610469565b5b600061093d84828501610904565b91505092915050565b600082825260208201905092915050565b7f5341000000000000000000000000000000000000000000000000000000000000600082015250565b600061098d600283610946565b915061099882610957565b602082019050919050565b600060208201905081810360008301526109bc81610980565b905091905056fea264697066735822122060cc85220c00478617f86bb5aa3009e53b96c7bba6b7203b3c138d610e319ce464736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}