{
  "address": "0x75D1E4838051a0e84F3D5a5cA2f7Ca96B5D3eF01",
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "smartContract",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "in_token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "in_am",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "out_token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "min_out_am",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "internalType": "struct TX_Object",
          "name": "",
          "type": "tuple"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "ExecutionError",
      "type": "error"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "smartContract",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "in_token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "in_am",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "out_token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "min_out_am",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "internalType": "struct TX_Object[]",
          "name": "toExecute",
          "type": "tuple[]"
        }
      ],
      "name": "executeTransactions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x609c2af68a620a3d62f9848368a93252011e2b9cd211c14a0b771b63fd071337",
  "receipt": {
    "to": null,
    "from": "0xAEB478F060B582d3E8d752bcb3430B59FAe4cAF3",
    "contractAddress": "0x75D1E4838051a0e84F3D5a5cA2f7Ca96B5D3eF01",
    "transactionIndex": 3,
    "gasUsed": "668962",
    "logsBloom": "0x
    "blockHash": "0x474c6154cb9433332c1fe67e605d9fc9e890a067ca4a8f58044a40f47c6f0d4c",
    "transactionHash": "0x609c2af68a620a3d62f9848368a93252011e2b9cd211c14a0b771b63fd071337",
    "logs": [
      {
        "transactionIndex": 3,
        "blockNumber": 34367221,
        "transactionHash": "0x609c2af68a620a3d62f9848368a93252011e2b9cd211c14a0b771b63fd071337",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000aeb478f060b582d3e8d752bcb3430b59fae4caf3",
          "0x0000000000000000000000003a22c8bc68e98b0faf40f349dd2b2890fae01484"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000004ecb9bdff9c4800000000000000000000000000000000000000000000000002c68af0bb14000000000000000000000000000000000000000000000000061e3d9cdd5277994cc500000000000000000000000000000000000000000000000002c19e36fd1463b800000000000000000000000000000000000000000000061e3da1ca0c3598e90d",
        "logIndex": 9,
        "blockHash": "0x474c6154cb9433332c1fe67e605d9fc9e890a067ca4a8f58044a40f47c6f0d4c"
      }
    ],
    "blockNumber": 34367221,
    "cumulativeGasUsed": "1422544",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "16c9b968fcd0b04d354d10e62ab1359a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"smartContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"in_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"in_am\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"out_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"min_out_am\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct TX_Object\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"ExecutionError\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"smartContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"in_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"in_am\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"out_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"min_out_am\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct TX_Object[]\",\"name\":\"toExecute\",\"type\":\"tuple[]\"}],\"name\":\"executeTransactions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/Router.sol\":\"Router\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"contracts/core/IPlugin.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.19;\\n\\ninterface IPlugin {\\n    function executeTransaction(address, uint, address, uint, address, bytes memory) external;\\n}\\n\",\"keccak256\":\"0x2c00d6a3771f6388aa779cf0813287c2e47bf9087a3f5561748972725a38648a\",\"license\":\"Unlicense\"},\"contracts/core/Router.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.19;\\n\\nimport {IPlugin} from \\\"./IPlugin.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\nstruct TX_Object{\\n    address smartContract;\\n    address in_token;\\n    uint in_am;\\n    address out_token;\\n    uint min_out_am;\\n    address receiver;\\n    bytes data;\\n}\\n\\ncontract Router {\\n\\n    error ExecutionError(TX_Object, string);\\n\\n    function executeTransactions(TX_Object[] calldata toExecute) external{\\n        require(toExecute.length != 0, \\\"Cannot call with an empty array\\\");\\n        for(uint i; i < toExecute.length; i++){\\n            TX_Object memory tx = toExecute[i];\\n            uint balBefore = IERC20(tx.smartContract).balanceOf(tx.receiver);\\n            IPlugin(tx.smartContract).executeTransaction(tx.in_token, tx.in_am, tx.out_token, tx.min_out_am, tx.receiver, tx.data);\\n            uint balAfter = IERC20(tx.smartContract).balanceOf(tx.receiver);\\n\\n            if(balAfter - balBefore < tx.min_out_am){\\n                revert ExecutionError(tx, \\\"Implementation failed to return a sufficient amount\\\");\\n            }\\n        }\\n    }\\n\\n}\\n\",\"keccak256\":\"0x8dc59697d242a9ca80f0f00d01548880135504c777685d9e663ef105d902c261\",\"license\":\"Unlicense\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610b2d806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063e3d378aa14610030575b600080fd5b61004a60048036038101906100459190610357565b61004c565b005b60008282905003610092576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161008990610401565b60405180910390fd5b60005b828290508110156102d95760008383838181106100b5576100b4610421565b5b90506020028101906100c79190610455565b6100d09061072c565b90506000816000015173ffffffffffffffffffffffffffffffffffffffff166370a082318360a001516040518263ffffffff1660e01b8152600401610115919061074e565b602060405180830381865afa158015610132573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610156919061077e565b9050816000015173ffffffffffffffffffffffffffffffffffffffff1663e20418ef83602001518460400151856060015186608001518760a001518860c001516040518763ffffffff1660e01b81526004016101b796959493929190610839565b600060405180830381600087803b1580156101d157600080fd5b505af11580156101e5573d6000803e3d6000fd5b505050506000826000015173ffffffffffffffffffffffffffffffffffffffff166370a082318460a001516040518263ffffffff1660e01b815260040161022c919061074e565b602060405180830381865afa158015610249573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026d919061077e565b90508260800151828261028091906108d0565b10156102c357826040517f82fee6180000000000000000000000000000000000000000000000000000000081526004016102ba9190610a7a565b60405180910390fd5b50505080806102d190610aaf565b915050610095565b505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f840112610317576103166102f2565b5b8235905067ffffffffffffffff811115610334576103336102f7565b5b6020830191508360208202830111156103505761034f6102fc565b5b9250929050565b6000806020838503121561036e5761036d6102e8565b5b600083013567ffffffffffffffff81111561038c5761038b6102ed565b5b61039885828601610301565b92509250509250929050565b600082825260208201905092915050565b7f43616e6e6f742063616c6c207769746820616e20656d70747920617272617900600082015250565b60006103eb601f836103a4565b91506103f6826103b5565b602082019050919050565b6000602082019050818103600083015261041a816103de565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b60008235600160e00383360303811261047157610470610450565b5b80830191505092915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6104cb82610482565b810181811067ffffffffffffffff821117156104ea576104e9610493565b5b80604052505050565b60006104fd6102de565b905061050982826104c2565b919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061053e82610513565b9050919050565b61054e81610533565b811461055957600080fd5b50565b60008135905061056b81610545565b92915050565b6000819050919050565b61058481610571565b811461058f57600080fd5b50565b6000813590506105a18161057b565b92915050565b600080fd5b600067ffffffffffffffff8211156105c7576105c6610493565b5b6105d082610482565b9050602081019050919050565b82818337600083830152505050565b60006105ff6105fa846105ac565b6104f3565b90508281526020810184848401111561061b5761061a6105a7565b5b6106268482856105dd565b509392505050565b600082601f830112610643576106426102f2565b5b81356106538482602086016105ec565b91505092915050565b600060e082840312156106725761067161047d565b5b61067c60e06104f3565b9050600061068c8482850161055c565b60008301525060206106a08482850161055c565b60208301525060406106b484828501610592565b60408301525060606106c88482850161055c565b60608301525060806106dc84828501610592565b60808301525060a06106f08482850161055c565b60a08301525060c082013567ffffffffffffffff8111156107145761071361050e565b5b6107208482850161062e565b60c08301525092915050565b6000610738368361065c565b9050919050565b61074881610533565b82525050565b6000602082019050610763600083018461073f565b92915050565b6000815190506107788161057b565b92915050565b600060208284031215610794576107936102e8565b5b60006107a284828501610769565b91505092915050565b6107b481610571565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156107f45780820151818401526020810190506107d9565b60008484015250505050565b600061080b826107ba565b61081581856107c5565b93506108258185602086016107d6565b61082e81610482565b840191505092915050565b600060c08201905061084e600083018961073f565b61085b60208301886107ab565b610868604083018761073f565b61087560608301866107ab565b610882608083018561073f565b81810360a08301526108948184610800565b9050979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006108db82610571565b91506108e683610571565b92508282039050818111156108fe576108fd6108a1565b5b92915050565b61090d81610533565b82525050565b61091c81610571565b82525050565b600082825260208201905092915050565b600061093e826107ba565b6109488185610922565b93506109588185602086016107d6565b61096181610482565b840191505092915050565b600060e0830160008301516109846000860182610904565b5060208301516109976020860182610904565b5060408301516109aa6040860182610913565b5060608301516109bd6060860182610904565b5060808301516109d06080860182610913565b5060a08301516109e360a0860182610904565b5060c083015184820360c08601526109fb8282610933565b9150508091505092915050565b7f496d706c656d656e746174696f6e206661696c656420746f2072657475726e2060008201527f612073756666696369656e7420616d6f756e7400000000000000000000000000602082015250565b6000610a646033836103a4565b9150610a6f82610a08565b604082019050919050565b60006040820190508181036000830152610a94818461096c565b90508181036020830152610aa781610a57565b905092915050565b6000610aba82610571565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610aec57610aeb6108a1565b5b60018201905091905056fea264697066735822122071ebed1e4481ada8244a29439083972a37eda2bd720dbbae645d49de6ef6559f64736f6c63430008130033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063e3d378aa14610030575b600080fd5b61004a60048036038101906100459190610357565b61004c565b005b60008282905003610092576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161008990610401565b60405180910390fd5b60005b828290508110156102d95760008383838181106100b5576100b4610421565b5b90506020028101906100c79190610455565b6100d09061072c565b90506000816000015173ffffffffffffffffffffffffffffffffffffffff166370a082318360a001516040518263ffffffff1660e01b8152600401610115919061074e565b602060405180830381865afa158015610132573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610156919061077e565b9050816000015173ffffffffffffffffffffffffffffffffffffffff1663e20418ef83602001518460400151856060015186608001518760a001518860c001516040518763ffffffff1660e01b81526004016101b796959493929190610839565b600060405180830381600087803b1580156101d157600080fd5b505af11580156101e5573d6000803e3d6000fd5b505050506000826000015173ffffffffffffffffffffffffffffffffffffffff166370a082318460a001516040518263ffffffff1660e01b815260040161022c919061074e565b602060405180830381865afa158015610249573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026d919061077e565b90508260800151828261028091906108d0565b10156102c357826040517f82fee6180000000000000000000000000000000000000000000000000000000081526004016102ba9190610a7a565b60405180910390fd5b50505080806102d190610aaf565b915050610095565b505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f840112610317576103166102f2565b5b8235905067ffffffffffffffff811115610334576103336102f7565b5b6020830191508360208202830111156103505761034f6102fc565b5b9250929050565b6000806020838503121561036e5761036d6102e8565b5b600083013567ffffffffffffffff81111561038c5761038b6102ed565b5b61039885828601610301565b92509250509250929050565b600082825260208201905092915050565b7f43616e6e6f742063616c6c207769746820616e20656d70747920617272617900600082015250565b60006103eb601f836103a4565b91506103f6826103b5565b602082019050919050565b6000602082019050818103600083015261041a816103de565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b60008235600160e00383360303811261047157610470610450565b5b80830191505092915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6104cb82610482565b810181811067ffffffffffffffff821117156104ea576104e9610493565b5b80604052505050565b60006104fd6102de565b905061050982826104c2565b919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061053e82610513565b9050919050565b61054e81610533565b811461055957600080fd5b50565b60008135905061056b81610545565b92915050565b6000819050919050565b61058481610571565b811461058f57600080fd5b50565b6000813590506105a18161057b565b92915050565b600080fd5b600067ffffffffffffffff8211156105c7576105c6610493565b5b6105d082610482565b9050602081019050919050565b82818337600083830152505050565b60006105ff6105fa846105ac565b6104f3565b90508281526020810184848401111561061b5761061a6105a7565b5b6106268482856105dd565b509392505050565b600082601f830112610643576106426102f2565b5b81356106538482602086016105ec565b91505092915050565b600060e082840312156106725761067161047d565b5b61067c60e06104f3565b9050600061068c8482850161055c565b60008301525060206106a08482850161055c565b60208301525060406106b484828501610592565b60408301525060606106c88482850161055c565b60608301525060806106dc84828501610592565b60808301525060a06106f08482850161055c565b60a08301525060c082013567ffffffffffffffff8111156107145761071361050e565b5b6107208482850161062e565b60c08301525092915050565b6000610738368361065c565b9050919050565b61074881610533565b82525050565b6000602082019050610763600083018461073f565b92915050565b6000815190506107788161057b565b92915050565b600060208284031215610794576107936102e8565b5b60006107a284828501610769565b91505092915050565b6107b481610571565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156107f45780820151818401526020810190506107d9565b60008484015250505050565b600061080b826107ba565b61081581856107c5565b93506108258185602086016107d6565b61082e81610482565b840191505092915050565b600060c08201905061084e600083018961073f565b61085b60208301886107ab565b610868604083018761073f565b61087560608301866107ab565b610882608083018561073f565b81810360a08301526108948184610800565b9050979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006108db82610571565b91506108e683610571565b92508282039050818111156108fe576108fd6108a1565b5b92915050565b61090d81610533565b82525050565b61091c81610571565b82525050565b600082825260208201905092915050565b600061093e826107ba565b6109488185610922565b93506109588185602086016107d6565b61096181610482565b840191505092915050565b600060e0830160008301516109846000860182610904565b5060208301516109976020860182610904565b5060408301516109aa6040860182610913565b5060608301516109bd6060860182610904565b5060808301516109d06080860182610913565b5060a08301516109e360a0860182610904565b5060c083015184820360c08601526109fb8282610933565b9150508091505092915050565b7f496d706c656d656e746174696f6e206661696c656420746f2072657475726e2060008201527f612073756666696369656e7420616d6f756e7400000000000000000000000000602082015250565b6000610a646033836103a4565b9150610a6f82610a08565b604082019050919050565b60006040820190508181036000830152610a94818461096c565b90508181036020830152610aa781610a57565b905092915050565b6000610aba82610571565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610aec57610aeb6108a1565b5b60018201905091905056fea264697066735822122071ebed1e4481ada8244a29439083972a37eda2bd720dbbae645d49de6ef6559f64736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}