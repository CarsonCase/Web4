{
  "address": "0x07a90D50AE44feF27439CC0BFB46390cFD83BF36",
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "smartContract",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "in_token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "in_am",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "out_token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "min_out_am",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "internalType": "struct TX_Object",
          "name": "",
          "type": "tuple"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "ExecutionError",
      "type": "error"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "smartContract",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "in_token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "in_am",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "out_token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "min_out_am",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "internalType": "struct TX_Object[]",
          "name": "toExecute",
          "type": "tuple[]"
        }
      ],
      "name": "executeTransactions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x14f181a866786a8cf2742838276771c9e1c2efd1789bdb05326b36cf8f263b58",
  "receipt": {
    "to": null,
    "from": "0xAEB478F060B582d3E8d752bcb3430B59FAe4cAF3",
    "contractAddress": "0x07a90D50AE44feF27439CC0BFB46390cFD83BF36",
    "transactionIndex": 4,
    "gasUsed": "670894",
    "logsBloom": "0x
    "blockHash": "0xb484e45d24c859d2442347d129493958c9be1e20891b59507c829d140d759a02",
    "transactionHash": "0x14f181a866786a8cf2742838276771c9e1c2efd1789bdb05326b36cf8f263b58",
    "logs": [
      {
        "transactionIndex": 4,
        "blockNumber": 34389998,
        "transactionHash": "0x14f181a866786a8cf2742838276771c9e1c2efd1789bdb05326b36cf8f263b58",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000aeb478f060b582d3e8d752bcb3430b59fae4caf3",
          "0x000000000000000000000000be188d6641e8b680743a4815dfa0f6208038960f"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000005c30e9760fec000000000000000000000000000000000000000000000000002bc70ffb021ee88000000000000000000000000000000000000000000002fe757f9e56b57cf046300000000000000000000000000000000000000000000000002b6adf118c0efc8000000000000000000000000000000000000000000002fe757ffa879ef300323",
        "logIndex": 11,
        "blockHash": "0xb484e45d24c859d2442347d129493958c9be1e20891b59507c829d140d759a02"
      }
    ],
    "blockNumber": 34389998,
    "cumulativeGasUsed": "1857714",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "ede1e8daa3567b5bf10f02c65a4f2423",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"smartContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"in_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"in_am\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"out_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"min_out_am\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct TX_Object\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"ExecutionError\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"smartContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"in_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"in_am\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"out_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"min_out_am\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct TX_Object[]\",\"name\":\"toExecute\",\"type\":\"tuple[]\"}],\"name\":\"executeTransactions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/Router.sol\":\"Router\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"contracts/core/IPlugin.sol\":{\"content\":\"//SPDX-License-Identifier: None\\npragma solidity ^0.8.19;\\n\\ninterface IPlugin {\\n    function executeTransaction(address, uint, address, uint, address, bytes memory) external;\\n}\\n\",\"keccak256\":\"0x936e672f1541114ecf9c709763c29bc7f3f96e4ececaf2b4dc0b56de24f92924\",\"license\":\"None\"},\"contracts/core/Router.sol\":{\"content\":\"//SPDX-License-Identifier: None\\npragma solidity ^0.8.19;\\n\\nimport {IPlugin} from \\\"./IPlugin.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\nstruct TX_Object{\\n    address smartContract;\\n    address in_token;\\n    uint in_am;\\n    address out_token;\\n    uint min_out_am;\\n    address receiver;\\n    bytes data;\\n}\\n\\ncontract Router {\\n\\n    error ExecutionError(TX_Object, string);\\n\\n    function executeTransactions(TX_Object[] calldata toExecute) external{\\n        require(toExecute.length != 0, \\\"Cannot call with an empty array\\\");\\n        for(uint i; i < toExecute.length; i++){\\n            TX_Object memory _tx = toExecute[i];\\n            uint balBefore = IERC20(_tx.smartContract).balanceOf(_tx.receiver);\\n            if(_tx.in_am > 0){\\n\\n            }\\n            IPlugin(_tx.smartContract).executeTransaction(_tx.in_token, _tx.in_am, _tx.out_token, _tx.min_out_am, _tx.receiver, _tx.data);\\n            uint balAfter = IERC20(_tx.smartContract).balanceOf(_tx.receiver);\\n\\n            if(balAfter - balBefore < _tx.min_out_am){\\n                revert ExecutionError(_tx, \\\"Implementation failed to return a sufficient amount\\\");\\n            }\\n        }\\n    }\\n\\n}\\n\",\"keccak256\":\"0x41ab65748728d1b9a43f7f9470506bbe12c3cb6961eeed252283b380bc473b9c\",\"license\":\"None\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610b36806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063e3d378aa14610030575b600080fd5b61004a60048036038101906100459190610360565b61004c565b005b60008282905003610092576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100899061040a565b60405180910390fd5b60005b828290508110156102e25760008383838181106100b5576100b461042a565b5b90506020028101906100c7919061045e565b6100d090610735565b90506000816000015173ffffffffffffffffffffffffffffffffffffffff166370a082318360a001516040518263ffffffff1660e01b81526004016101159190610757565b602060405180830381865afa158015610132573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101569190610787565b9050600082604001515050816000015173ffffffffffffffffffffffffffffffffffffffff1663e20418ef83602001518460400151856060015186608001518760a001518860c001516040518763ffffffff1660e01b81526004016101c096959493929190610842565b600060405180830381600087803b1580156101da57600080fd5b505af11580156101ee573d6000803e3d6000fd5b505050506000826000015173ffffffffffffffffffffffffffffffffffffffff166370a082318460a001516040518263ffffffff1660e01b81526004016102359190610757565b602060405180830381865afa158015610252573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102769190610787565b90508260800151828261028991906108d9565b10156102cc57826040517f82fee6180000000000000000000000000000000000000000000000000000000081526004016102c39190610a83565b60405180910390fd5b50505080806102da90610ab8565b915050610095565b505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f8401126103205761031f6102fb565b5b8235905067ffffffffffffffff81111561033d5761033c610300565b5b60208301915083602082028301111561035957610358610305565b5b9250929050565b60008060208385031215610377576103766102f1565b5b600083013567ffffffffffffffff811115610395576103946102f6565b5b6103a18582860161030a565b92509250509250929050565b600082825260208201905092915050565b7f43616e6e6f742063616c6c207769746820616e20656d70747920617272617900600082015250565b60006103f4601f836103ad565b91506103ff826103be565b602082019050919050565b60006020820190508181036000830152610423816103e7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b60008235600160e00383360303811261047a57610479610459565b5b80830191505092915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6104d48261048b565b810181811067ffffffffffffffff821117156104f3576104f261049c565b5b80604052505050565b60006105066102e7565b905061051282826104cb565b919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105478261051c565b9050919050565b6105578161053c565b811461056257600080fd5b50565b6000813590506105748161054e565b92915050565b6000819050919050565b61058d8161057a565b811461059857600080fd5b50565b6000813590506105aa81610584565b92915050565b600080fd5b600067ffffffffffffffff8211156105d0576105cf61049c565b5b6105d98261048b565b9050602081019050919050565b82818337600083830152505050565b6000610608610603846105b5565b6104fc565b905082815260208101848484011115610624576106236105b0565b5b61062f8482856105e6565b509392505050565b600082601f83011261064c5761064b6102fb565b5b813561065c8482602086016105f5565b91505092915050565b600060e0828403121561067b5761067a610486565b5b61068560e06104fc565b9050600061069584828501610565565b60008301525060206106a984828501610565565b60208301525060406106bd8482850161059b565b60408301525060606106d184828501610565565b60608301525060806106e58482850161059b565b60808301525060a06106f984828501610565565b60a08301525060c082013567ffffffffffffffff81111561071d5761071c610517565b5b61072984828501610637565b60c08301525092915050565b60006107413683610665565b9050919050565b6107518161053c565b82525050565b600060208201905061076c6000830184610748565b92915050565b60008151905061078181610584565b92915050565b60006020828403121561079d5761079c6102f1565b5b60006107ab84828501610772565b91505092915050565b6107bd8161057a565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156107fd5780820151818401526020810190506107e2565b60008484015250505050565b6000610814826107c3565b61081e81856107ce565b935061082e8185602086016107df565b6108378161048b565b840191505092915050565b600060c0820190506108576000830189610748565b61086460208301886107b4565b6108716040830187610748565b61087e60608301866107b4565b61088b6080830185610748565b81810360a083015261089d8184610809565b9050979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006108e48261057a565b91506108ef8361057a565b9250828203905081811115610907576109066108aa565b5b92915050565b6109168161053c565b82525050565b6109258161057a565b82525050565b600082825260208201905092915050565b6000610947826107c3565b610951818561092b565b93506109618185602086016107df565b61096a8161048b565b840191505092915050565b600060e08301600083015161098d600086018261090d565b5060208301516109a0602086018261090d565b5060408301516109b3604086018261091c565b5060608301516109c6606086018261090d565b5060808301516109d9608086018261091c565b5060a08301516109ec60a086018261090d565b5060c083015184820360c0860152610a04828261093c565b9150508091505092915050565b7f496d706c656d656e746174696f6e206661696c656420746f2072657475726e2060008201527f612073756666696369656e7420616d6f756e7400000000000000000000000000602082015250565b6000610a6d6033836103ad565b9150610a7882610a11565b604082019050919050565b60006040820190508181036000830152610a9d8184610975565b90508181036020830152610ab081610a60565b905092915050565b6000610ac38261057a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610af557610af46108aa565b5b60018201905091905056fea2646970667358221220ce214d9b717d0c0b575e5c706610b5635752f267b3bfa739bb6a1daf516837c064736f6c63430008130033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063e3d378aa14610030575b600080fd5b61004a60048036038101906100459190610360565b61004c565b005b60008282905003610092576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100899061040a565b60405180910390fd5b60005b828290508110156102e25760008383838181106100b5576100b461042a565b5b90506020028101906100c7919061045e565b6100d090610735565b90506000816000015173ffffffffffffffffffffffffffffffffffffffff166370a082318360a001516040518263ffffffff1660e01b81526004016101159190610757565b602060405180830381865afa158015610132573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101569190610787565b9050600082604001515050816000015173ffffffffffffffffffffffffffffffffffffffff1663e20418ef83602001518460400151856060015186608001518760a001518860c001516040518763ffffffff1660e01b81526004016101c096959493929190610842565b600060405180830381600087803b1580156101da57600080fd5b505af11580156101ee573d6000803e3d6000fd5b505050506000826000015173ffffffffffffffffffffffffffffffffffffffff166370a082318460a001516040518263ffffffff1660e01b81526004016102359190610757565b602060405180830381865afa158015610252573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102769190610787565b90508260800151828261028991906108d9565b10156102cc57826040517f82fee6180000000000000000000000000000000000000000000000000000000081526004016102c39190610a83565b60405180910390fd5b50505080806102da90610ab8565b915050610095565b505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f8401126103205761031f6102fb565b5b8235905067ffffffffffffffff81111561033d5761033c610300565b5b60208301915083602082028301111561035957610358610305565b5b9250929050565b60008060208385031215610377576103766102f1565b5b600083013567ffffffffffffffff811115610395576103946102f6565b5b6103a18582860161030a565b92509250509250929050565b600082825260208201905092915050565b7f43616e6e6f742063616c6c207769746820616e20656d70747920617272617900600082015250565b60006103f4601f836103ad565b91506103ff826103be565b602082019050919050565b60006020820190508181036000830152610423816103e7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b60008235600160e00383360303811261047a57610479610459565b5b80830191505092915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6104d48261048b565b810181811067ffffffffffffffff821117156104f3576104f261049c565b5b80604052505050565b60006105066102e7565b905061051282826104cb565b919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105478261051c565b9050919050565b6105578161053c565b811461056257600080fd5b50565b6000813590506105748161054e565b92915050565b6000819050919050565b61058d8161057a565b811461059857600080fd5b50565b6000813590506105aa81610584565b92915050565b600080fd5b600067ffffffffffffffff8211156105d0576105cf61049c565b5b6105d98261048b565b9050602081019050919050565b82818337600083830152505050565b6000610608610603846105b5565b6104fc565b905082815260208101848484011115610624576106236105b0565b5b61062f8482856105e6565b509392505050565b600082601f83011261064c5761064b6102fb565b5b813561065c8482602086016105f5565b91505092915050565b600060e0828403121561067b5761067a610486565b5b61068560e06104fc565b9050600061069584828501610565565b60008301525060206106a984828501610565565b60208301525060406106bd8482850161059b565b60408301525060606106d184828501610565565b60608301525060806106e58482850161059b565b60808301525060a06106f984828501610565565b60a08301525060c082013567ffffffffffffffff81111561071d5761071c610517565b5b61072984828501610637565b60c08301525092915050565b60006107413683610665565b9050919050565b6107518161053c565b82525050565b600060208201905061076c6000830184610748565b92915050565b60008151905061078181610584565b92915050565b60006020828403121561079d5761079c6102f1565b5b60006107ab84828501610772565b91505092915050565b6107bd8161057a565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156107fd5780820151818401526020810190506107e2565b60008484015250505050565b6000610814826107c3565b61081e81856107ce565b935061082e8185602086016107df565b6108378161048b565b840191505092915050565b600060c0820190506108576000830189610748565b61086460208301886107b4565b6108716040830187610748565b61087e60608301866107b4565b61088b6080830185610748565b81810360a083015261089d8184610809565b9050979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006108e48261057a565b91506108ef8361057a565b9250828203905081811115610907576109066108aa565b5b92915050565b6109168161053c565b82525050565b6109258161057a565b82525050565b600082825260208201905092915050565b6000610947826107c3565b610951818561092b565b93506109618185602086016107df565b61096a8161048b565b840191505092915050565b600060e08301600083015161098d600086018261090d565b5060208301516109a0602086018261090d565b5060408301516109b3604086018261091c565b5060608301516109c6606086018261090d565b5060808301516109d9608086018261091c565b5060a08301516109ec60a086018261090d565b5060c083015184820360c0860152610a04828261093c565b9150508091505092915050565b7f496d706c656d656e746174696f6e206661696c656420746f2072657475726e2060008201527f612073756666696369656e7420616d6f756e7400000000000000000000000000602082015250565b6000610a6d6033836103ad565b9150610a7882610a11565b604082019050919050565b60006040820190508181036000830152610a9d8184610975565b90508181036020830152610ab081610a60565b905092915050565b6000610ac38261057a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610af557610af46108aa565b5b60018201905091905056fea2646970667358221220ce214d9b717d0c0b575e5c706610b5635752f267b3bfa739bb6a1daf516837c064736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}